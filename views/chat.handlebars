<style>
@import url('https://fonts.googleapis.com/css?family=Fredoka+One&display=swap');
#chat-output, #message, #send-chat {
  font-family: 'Nunito';
}
#chat-title {
  font-family: 'Fredoka One', cursive;
  font-size: 18px;
  padding: 10px 20px;
  text-align: center;
  background: #fff;
  margin: 0;
}
#quack-chat {
  max-width: 600px;
  margin: 30px auto;
  border: 1px solid #ddd;
  box-shadow: 1px 3px 5px rgba(0,0,0,0.05);
  border-radius: 2px;
}
#chat-window {
  height: 400px;
  overflow: auto;
  overflow-wrap: break-word;
  background: #f9f9f9;
}
#chat-output p {
  padding: 6px 0px;
  margin: 0 20px;
  border-bottom: 1px solid #e9e9e9;
  color: #555;
}
#chat-output b {
  color: #000;
}
#message {
  padding: 10px 20px;
  box-sizing: border-box;
  background: #eee;
  border: 0;
  display: block;
  width: 100%;
  background: #fff;
  border: 1px solid #eee;
  font-size: 16px;
}
#send-chat {
  background: #7BFCFC;
  font-size: 18px;
  border: 0;
  padding: 12px 0;
  width: 100%;
  border-radius: 0 0 2px 2px;
}
</style>

<div id="quack-chat">
  <h2 id="chat-title">Quack Chat</h2>
  <div id="chat-window">
    <div id="chat-output"></div>
    <div id="feedback"></div>
  </div>
  <input type="text" id="message" placeholder="Message"/>
  <button id="send-chat"><i class="far fa-paper-plane"></i></button>
</div>

<script>
// On load
(function() {
  const socket = io.connect('http://localhost:3000');

  // Store DOM elements
  const message = document.getElementById('message');
  const handle = document.getElementById('handle');
  const sendBtn = document.getElementById('send-chat');
  const chatOutput = document.getElementById('chat-output');

  const getUsername = async function () {
    const fetchRes = await fetch('/api/get-user', { method: 'GET' })
    if (fetchRes.status === 200) {
      const body = await fetchRes.json()
      console.log('get username')
      console.log(body)
      return body.username
    } 
  }

  // Emit chat event
  sendBtn.addEventListener('click', async () => {
    if (!message.value) {
      return
    }
    const username = await getUsername();
    // if (!username) // return show error
    socket.emit('chat', {
      message: message.value,
      username
    });
    message.value = '';
  });

  // Listen for enter key in chat message input
  message.addEventListener('keyup', (e) => {
    if (e.keyCode === 13) {
      sendBtn.click()
    }
  });

  // Listen for events
  socket.on('chat', data => {
      console.log('username from response')
      console.log(data)
    feedback.innerHtml = '';
    chatOutput.innerHTML += `<p><b>${data.username}:</b> ${data.message}</p>`;
  });

})();
</script>
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
